plugins {
  id 'org.jetbrains.dokka' version '0.10.1'
  id 'org.jetbrains.kotlin.jvm' version '1.4.30'
  id 'org.jlleitschuh.gradle.ktlint' version '9.4.1'
}

dependencies {
  api project(':dbsetup-spreadsheet')
  api 'com.ninja-squad:DbSetup-kotlin:2.1.0'

  testRuntimeOnly 'com.h2database:h2:1.4.200'
  testRuntimeOnly 'org.apache.poi:poi-ooxml:5.0.0'
  testImplementation 'org.assertj:assertj-db:2.0.2'
  testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
  kotlinOptions {
    jvmTarget = '1.8'
  }
}

test {
  useJUnitPlatform()
}

jar {
  manifest {
    attributes(
      'Export-Package': 'com.sciencesakura.dbsetup.spreadsheet',
      'Import-Package': 'com.ninja_squad.dbsetup_kotlin,'
        + 'com.sciencesakura.dbsetup.spreadsheet'
        + ";bundle-symbolic-name=\"${project.group}.${project(':dbsetup-spreadsheet').name}\""
        + ";bundle-version=\"${project.version}\""
    )
  }
}

dokka {
  outputDirectory = file("$rootDir/docs/kotlin")
  configuration {
    jdkVersion = 8
  }
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
  outputDirectory = temporaryDir
  outputFormat = 'javadoc'
  configuration {
    jdkVersion = 8
  }
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
  archiveClassifier.set('javadoc')
  from dokkaJavadoc.outputDirectory
}

publishing {
  publications {
    maven(MavenPublication) {
      artifact kotlinSourcesJar
      artifact javadocJar
    }
  }
}

clean {
  delete dokka.outputDirectory
}
